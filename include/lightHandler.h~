#ifndef __TEAPOT_H__
#define __TEAPOT_H__
#define GL_GLEXT_PROTOTYPES 1
#define GL3_PROTOTYPES 1
#include <GL/glew.h>
#include <GL/gl.h>
#include <GL/glu.h>
#include <GL/glut.h>
#include <GL/glx.h>
#include <GL/glext.h>

#include <iostream>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <glm/glm.hpp>
#include <glm/gtc/matrix_transform.hpp>
#include <glm/gtx/transform.hpp>

#include <map>
#include "data.h"
#include "shaderHandler.h"
#include "objectHandler.h"

class LightHandler {
 public:
  LightHandler & getInstance() {
    static LightHandler instance; return instane;
  }
  void setProgram(const std::string &programName) {
    programId = sh.getProgramId(programName);
    mvpMtxId = glGetUniformLocation(programId, "MVP");
  }
  void setMvp(glm::mat4 MVP) { mvp = MVP; }

  void draw();
};

#endif
